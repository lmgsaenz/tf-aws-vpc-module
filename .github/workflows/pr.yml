name: Pull Request to main
on:
  pull_request:
    branches:
      - main

env:
  TF_VERSION: 1.5.7
  TG_VERSION: v0.50.17
  GO_VERSION: 1.21.1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
  AWS_REGION: eu-west-1
  GITHUB_TOKEN: ${{ github.token }}
  WORKING_DIR: examples
  TERRATEST_DIR: tests

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  security-scanner-code:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      pull-requests: write
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: $TF_VERSION

    - name: Setup Terragrunt
      run: |
        curl -s -qL -o terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/$TG_VERSION/terragrunt_linux_amd64
        chmod +x terragrunt
        sudo mv terragrunt /bin 

    - name: Terragrunt Init
      id: init
      run: terragrunt run-all init
  
    - name: Get and Report TFSec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        format: junit
        working_directory: ${{ env.WORKING_DIR }}
      continue-on-error: true
    
    - name: Add TFSect Report Code
      uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
      with:
        github_token: ${{ github.token }}
        tfsec_formats: junit
        soft_fail_commenter: true

  test-code:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get and Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}


      - name: Setup Go Dependency
        working-directory: ${{ env.TERRATEST_DIR }}
        run: |
          go mod init ${{ github.event.repository.name }}
          go mod tidy

      - name: Run Go Tests
        id: test
        working-directory: ${{ env.TERRATEST_DIR }}
        run: go test *test.go
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Add Terratest Comment
        if: always()
        id: comment
        uses: actions/github-script@v6
        env:
          RESULT: "terratest\n${{ steps.test.conclusion }}"
        with:
          github-token: ${{ github.token }}
          script: |
            const output = `#### Terratest Results \`${{ steps.test.outcome }}\`
  
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workflow: \`${{ github.workflow }}\`*`;
  
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })